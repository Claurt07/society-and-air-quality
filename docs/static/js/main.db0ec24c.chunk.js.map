{"version":3,"sources":["contexts/lib/fetchCSV.js","contexts/lib/fetchJSON.js","vars.js","contexts/SingleLoader.js","contexts/ACSContext.js","contexts/EPAContext.js","components/SlideLayout.js","slides/Intro.js","slides/Questions.js","slides/methodology/Data.js","slides/methodology/Processing.js","slides/methodology/Analysis.js","App.js","serviceWorker.js","index.js"],"names":["url","a","opts","onStep","undefined","Promise","resolve","reject","Papa","parse","worker","header","step","error","err","console","message","complete","res","data","fetch","method","mode","resp","text","log","json","YEARS","SingleLoader","name","children","context","useState","loading","setData","useEffect","loadValue","loadFunc","Provider","value","defaultValue","Context","React","createContext","timeseriesFlat","timeseriesVert","displayName","fetches","map","f","fetchCSV","all","results","stations","stationFetches","fetchJSON","stationResults","SlideLayout","contentStyle","style","minHeight","Content","padding","Text","Title","Slide","EPAContext","Consumer","direction","size","icon","ExperimentTwoTone","type","JSON","stringify","footerText","gutter","span","offset","title","bordered","App","slideID","setSlide","slider","useRef","slides","Intro","Questions","MethodologyData","MethodologyProcessing","MethodologyAnalysis","main","dotPosition","draggable","beforeChange","from","to","ref","current","S","Footer","justify","shape","ArrowLeftOutlined","onClick","prev","length","ArrowRightOutlined","float","next","ACSContext","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.db0ec24c.chunk.js","sourcesContent":["import Papa from 'papaparse';\n\n/**\n * Downloads given CSV file.\n * \n * @param {string} url csv file\n */\nexport default async function(url, opts = {\n  onStep: undefined,\n}) {\n  return new Promise((resolve, reject) => {\n    Papa.parse(url, {\n      worker: true,\n      header: true,\n      step: opts.onStep,\n      error: (err) => {\n        console.error(`fetchCsv: error on ${url}`, { err });\n        reject(err.message);\n      },\n      complete: (res) => {\n        resolve(res.data);\n      },\n    });\n  })\n}\n","/**\n * Downloads JSON asset\n * \n * @param {string} url resource to fetch\n */\nexport default async function(url) {\n    try {\n        const resp = await fetch(url, {\n            method: 'GET',\n            mode: 'no-cors',\n        });\n        console.log(url, { data: await resp.text() })\n        return resp.json();\n    } catch (err) {\n        console.error(`fetchJSON: error on ${url}`, err);\n        throw err;\n    }\n}\n","export const DEVELOPMENT = (process.env.NODE_ENV !== 'production');\nexport const YEARS = ['2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018'];\n","import React, { useState, useEffect } from 'react';\n\nfunction SingleLoader({ name, children, context }) {\n  const [data, setData] = useState({ loading: true })\n\n  useEffect(() => {\n    async function loadFunc() {\n      console.log(`${name}: loading...`);\n      try {\n        const data = await context.loadValue();\n        setData({ loading: false, ...data });\n        console.log(`${name}: ok, updated`);\n      } catch(err) {\n        console.log(`${name}: err, updated`);\n        setData({ loading: false, err });\n      }\n    }\n    loadFunc();\n  }, [name, context])\n\n  return <context.Provider value={data} children={children}/>;\n}\n\nSingleLoader.defaultValue = { loading: true, err: undefined };\n\nexport default SingleLoader;\n","import React from 'react';\n\nimport { resource, fetchCSV } from './lib';\nimport SingleLoader from './SingleLoader';\n\nconst Context = React.createContext({\n  timeseriesFlat: null,\n  timeseriesVert: null,\n\n  ...SingleLoader.defaultValue,\n});\n\nContext.displayName = 'context.acs';\n\nContext.loadValue = async function() {\n  const fetches = [\n    resource('/_data/acs/timeseries_flat.csv'),\n    resource('/_data/acs/timeseries_vert.csv'),\n  ].map((f) => fetchCSV(f));\n  const results = await Promise.all(fetches);\n  return {\n    timeseriesFlat: results[0],\n    timeseriesVert: results[1],\n  }\n}\n\nexport default Context;\n","import React from 'react';\n\nimport { YEARS } from '../vars';\n\nimport { resource, fetchCSV, fetchJSON } from './lib';\nimport SingleLoader from './SingleLoader';\n\nconst Context = React.createContext({\n  timeseriesFlat: null,\n  timeseriesVert: null,\n  stations: null,\n\n  ...SingleLoader.defaultValue,\n});\n\nContext.displayName = 'context.epa';\n\nContext.loadValue = async function() {\n  const fetches = [\n    resource('/_data/epa/timeseries_flat.csv'),\n    resource('/_data/epa/timeseries_vert.csv'),\n  ].map((f) => fetchCSV(f));\n  const results = await Promise.all(fetches);\n\n  const stationFetches = YEARS.map((f) => fetchJSON(resource(`_data/epa/stations/${f}_geojson.json`)));\n  const stationResults = await Promise.all(stationFetches);  \n\n  return {\n    timeseriesFlat: results[0],\n    timeseriesVert: results[1],\n    stations: stationResults,\n  }\n}\n\nexport default Context;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nfunction SlideLayout({ children, contentStyle={} }) {\n  return (\n    <Layout style={{minHeight:\"100%\"}}>\n      <Layout.Content style={{padding:'48px', ...contentStyle}}>\n        {children}\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default SlideLayout;\n","import React from 'react';\nimport { Spin, Typography, Avatar, Space } from 'antd';\nimport { ExperimentTwoTone } from '@ant-design/icons';\n\nimport EPAContext from '../contexts/EPAContext';\n\nimport SlideLayout from '../components/SlideLayout';\n\nconst { Text, Title } = Typography;\n\nfunction Slide() {\n  return (\n    <EPAContext.Consumer>\n      {(data) => (\n        <SlideLayout>\n          <Space direction=\"vertical\" size=\"large\" style={{ padding: '48px' }}>\n            <Avatar size=\"large\" icon={<ExperimentTwoTone />} /> \n            <Typography>\n              <Title>Society and Air Quality</Title>\n              <Text>EOSC 410 Final Project</Text> | <Text type=\"secondary\">University of British Columbia, April 2020</Text>\n            </Typography>\n\n            {data.loading\n              ? <Spin />\n              : (data.err\n                ? <Text>{data.err.message}</Text>\n                : <Text>{JSON.stringify(data.stations[0][0])}</Text>)}\n          </Space>\n        </SlideLayout>\n      )}\n    </EPAContext.Consumer>\n  );\n}\n\nSlide.footerText = 'Robert Lin and Angelene Leow';\n\nexport default Slide;\n","import React from 'react';\nimport { Card, Row, Col, Typography, Avatar, Space } from 'antd';\nimport { QuestionOutlined } from '@ant-design/icons';\n\nimport SlideLayout from '../components/SlideLayout';\n\nconst { Title, Text } = Typography;\n\nfunction Slide() {\n  return (\n    <SlideLayout>\n      <Row gutter={16}>\n        <Col span={8} offset={16}>\n          <Space direction=\"vertical\">\n              <Card title=\"Questions\" bordered={false}>\n                <Text>\n                  research questions, few sentences on the relevance of this study\n                </Text>\n              </Card>\n          </Space>\n        </Col>\n      </Row>\n    </SlideLayout>\n  );\n}\n\nSlide.footerText = 'Robert Lin and Angelene Leow';\n\nexport default Slide;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nimport SlideLayout from '../../components/SlideLayout';\n\nconst { Title } = Typography;\n\nfunction Slide() {\n  return (\n    <SlideLayout>\n      <Title>TODO</Title>\n    </SlideLayout>\n  );\n}\n\nexport default Slide;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nimport SlideLayout from '../../components/SlideLayout';\n\nconst { Title } = Typography;\n\nfunction Slide() {\n  return (\n    <SlideLayout>\n      <Title>TODO</Title>\n    </SlideLayout>\n  );\n}\n\nexport default Slide;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nimport SlideLayout from '../../components/SlideLayout';\n\nconst { Title } = Typography;\n\nfunction Slide() {\n  return (\n    <SlideLayout>\n      <Title>TODO</Title>\n    </SlideLayout>\n  );\n}\n\nexport default Slide;\n","import React, { useRef, useState } from 'react';\nimport { Carousel, Layout, Button, Row, Col, Typography } from 'antd';\nimport { ArrowRightOutlined, ArrowLeftOutlined } from '@ant-design/icons';\n\nimport './App.css';\n\n// contexts for data\nimport ACSContext from './contexts/ACSContext';\nimport EPAContext from './contexts/EPAContext';\nimport SingleLoader from './contexts/SingleLoader';\n\n// slideshow components\nimport Intro from './slides/Intro';\nimport Questions from './slides/Questions';\nimport MethodologyData from './slides/methodology/Data';\nimport MethodologyProcessing from './slides/methodology/Processing';\nimport MethodologyAnalysis from './slides/methodology/Analysis';\n\nconst { Text } = Typography; \n\nfunction App() {\n  const [slideID, setSlide] = useState(0);\n  const slider = useRef();\n\n  const slides = [\n    Intro,\n    Questions,\n    MethodologyData,\n    MethodologyProcessing,\n    MethodologyAnalysis,\n  ]\n\n  const main = (\n    <Layout style={{minHeight:\"100vh\"}}>\n      <Layout.Content>\n        <Carousel\n          dotPosition=\"top\"\n          draggable\n          beforeChange={(from, to) => { setSlide(to); }}\n          ref={ref => { slider.current = ref; }}\n          children={slides.map(S => <S />)} />\n      </Layout.Content>\n      <Layout.Footer>      \n        <Row justify=\"space-between\">\n          <Col span={8}>\n            {slideID > 0\n              ? <Button type=\"ghost\" shape=\"round\" icon={<ArrowLeftOutlined />} size=\"small\"\n                  onClick={() => { slider.current.prev() }}/>\n              : undefined}\n          </Col>\n          <Col>\n            <Text type=\"secondary\">\n              {slides[slideID].footerText}\n            </Text>\n          </Col>\n          <Col span={8} >\n            {slideID < slides.length\n              ? <Button type=\"ghost\" shape=\"round\" icon={<ArrowRightOutlined />} size=\"small\" style={{ float: 'right' }}\n                  onClick={() => { slider.current.next() }}/>\n              : undefined}\n          </Col>\n        </Row>\n      </Layout.Footer>\n    </Layout>\n  )\n\n  return (\n    <SingleLoader name=\"context.acs\" context={ACSContext}>\n      <SingleLoader name=\"context.epa\" context={EPAContext}>\n        {main}\n      </SingleLoader>\n    </SingleLoader>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}